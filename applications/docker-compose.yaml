services:

  db:
    container_name: postgresql_db
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment: 
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]  # Healthcheck for PostgreSQL
        interval: 60s
        timeout: 10s
        retries: 5
    volumes:
      - ./postgres_data:/var/lib/postgresql/data #persisting data 
            
  pgadmin:  
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - 5050:80 # for local browser (80 is the default port of the browsed)
    volumes:
      - ./pgadmin_data:/var/lib/pgadmin  # Persisting pgAdmin configuration and sessions
    depends_on: 
      - db

  etl:
    container_name: etl
    build:
      context: ./etl
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
        - ./etl:/etl
    depends_on: 
      db:
        condition: service_healthy
    healthcheck:
      test: "exit 0"


  api:
      build:
        context: ./back  # Ensure this points to the correct 'back' folder
        dockerfile: Dockerfile  # Ensure this points to the Dockerfile in the 'back' directory
      container_name: fastapi_app
      environment:
        DATABASE_URL: ${DATABASE_URL}
      ports:
        - "8000:8000"
      depends_on:
        - db
      command: uvicorn main:app --host 0.0.0.0 --port 8000


  app:
    container_name: streamlit_app
    build:
      context: ./app
      dockerfile: Dockerfile
    volumes:
      - ./app:/app
    ports:
      - 8501:8501
    environment:
      - API_URL=http://api:8000
    depends_on:
      - api